name: Foodgram-app workflow

on: push

jobs:

  tests:
    name: PEP8 checking
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        id: install_dependencies
        run: | 
          python -m pip install --upgrade pip
          pip install flake8 pep8-naming flake8-broken-line flake8-return flake8-isort
          pip install -r backend/foodgram/requirements.txt

      - name: Test with flake8, django tests and pytest
        id: test_flake8
        run: |
          cd backend/
          python -m flake8

      - name: Tests failure message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Ошибка тестирования ${{ github.repository }}
            https://github.com/${{ github.repository }}/action/runs/${{ github.run_id }}
            install_dependencies: ${{ steps.install_dependencies.outcome }}
            test_flake8: ${{ steps.test_flake8.outcome }} 

  build_and_push_to_docker_hub:
    name: Push Docker image to Docker Hub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Docker
        id: login_dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push to Docker Hub
        id: push_backend
        uses: docker/build-push-action@v2
        with:
          push: True
          context: ./backend/foodgram
          file: ./backend/foodgram/Dockerfile
          tags: ${{ secrets.DOCKER_USERNAME }}/foodgram-backend:latest

      - name: Build and push failure message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Ошибка сборки/отправки образа ${{ github.repository }}
            https://github.com/${{ github.repository }}/action/runs/${{ github.run_id }}
            login_dockerhub: ${{ steps.login_dockerhub.outcome }}
            push_backend: ${{ steps.push_backend.outcome }} 

  deploy:
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    name: Deploy Docker hub image on cloud server
    runs-on: ubuntu-latest
    needs: build_and_push_to_docker_hub
    steps:
      - name: executing remote ssh commands to deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USER }}
          key: ${{ secrets.SSH_KEY }}
          passphrase: ${{ secrets.PASSPHRASE }}
          script: |
            cd foodgram_project/infra
            sudo docker-compose stop
            sudo docker-compose rm backend
            echo DB_ENGINE=${{ secrets.DB_ENGINE }} > .env
            echo DB_NAME=${{ secrets.DB_NAME }} >> .env
            echo POSTGRES_USER=${{ secrets.POSTGRES_USER }} >> .env
            echo POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }} >> .env
            echo DB_HOST=${{ secrets.DB_HOST }} >> .env
            echo DB_PORT=${{ secrets.DB_PORT }} >> .env
            echo SECRET_KEY=${{ secrets.SECRET_KEY }} >> .env
            echo ALLOWED_HOSTS=${{ secrets.ALLOWED_HOSTS }} >> .env
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-backend
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/foodgram-frontend
            sudo docker-compose up -d

      - name: Deploy failure message
        if: ${{ failure() }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            Ошибка деплоя ${{ github.repository }}
            https://github.com/${{ github.repository }}/action/runs/${{ github.run_id }}

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: send message
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: ${{ github.workflow }} (${{ github.repository }}) успешно выполнен!